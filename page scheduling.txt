page scheduling 

1.FCFS:
#include <stdio.h>
int main()
{
	int q[10];
	int r=-1;
	int c=1,pid;
	while(c==1)
	{
		printf("1. New process\n2. Quit\nEnter your choice: ");
		scanf("%d",&c);
		if(c!=1)
			{continue;}
		else
		{
			printf("Enter process id: ");
			scanf("%d",&pid);
			r++;
			q[r]=pid;
		}
	}
	printf("Order of execution: ");
	for(int i=0;i<=r;i++)
	{
		printf("%d, ",q[i]);
	}
	printf("\n");
}
----------------------------------------------------------------
2) LRU

#include <stdio.h>
int findLRU(int time[], int n)
{
   int i, minimum = time[0], pos = 0;
   for (i = 1; i < n; ++i)
   {
      if (time[i] < minimum)
      {
         minimum = time[i];
         pos = i;
      }
   }
   return pos;
}
int main()
{
   int no_of_frames, no_of_pages, frames[10], pages[30], counter = 0, time[10], flag1, flag2, i, j, pos, faults = 0;
   printf("Enter number of frames: ");
   scanf("%d", &no_of_frames);
   printf("Enter number of pages: ");
   scanf("%d", &no_of_pages);
   printf("Enter reference string: ");
   for (i = 0; i < no_of_pages; ++i)
   	{scanf("%d", &pages[i]);}
   for (i = 0; i < no_of_frames; ++i)
   	{frames[i] = -1;}
   for (i = 0; i < no_of_pages; ++i)
   {
      flag1 = flag2 = 0;
      for (j = 0; j < no_of_frames; ++j)
      {
         if (frames[j] == pages[i])
         {
            counter++;
            time[j] = counter;
            flag1 = flag2 = 1;
            break;
         }
      }
      if (flag1 == 0)
      {
         for (j = 0; j < no_of_frames; ++j)
         {
            if (frames[j] == -1)
            {
               counter++;
               faults++;
               frames[j] = pages[i];
               time[j] = counter;
               flag2 = 1;
               break;
            }
         }
      }
      if (flag2 == 0)
      {
         pos = findLRU(time, no_of_frames);
         counter++;
         faults++;
         frames[pos] = pages[i];
         time[pos] = counter;
      }
      printf("\n");
      for (j = 0; j < no_of_frames; ++j)
      	{printf("%d\t", frames[j]);}
   }
   printf("\nTotal Page Faults = %d", faults);
}
---------------------------------------------------------------------------------
3.Most Optimal:

#include<stdio.h>
int main()
{
    int nf,np,frames[10],pages[30],temp[10],f1,f2,f3,i,j,k,pos,max,faults=0;
    printf("Enter number of frames: ");
    scanf("%d", &nf);
    printf("Enter number of pages: ");
    scanf("%d", &np);
    printf("Enter page reference string: ");
    for(i = 0; i < np; ++i)
    	{scanf("%d", &pages[i]);}
    for(i = 0; i < nf; ++i)
    	{frames[i] = -1;}
    for(i = 0; i < np; ++i)
    {
    	f1 = f2 = 0;    
        for(j = 0; j < nf; ++j)
        {
            if(frames[j] == pages[i]){
                   f1 = f2 = 1;
                   break;
               }
        }
        if(f1 == 0)
        {
            for(j = 0; j < nf; ++j){
                if(frames[j] == -1){
                    faults++;
                    frames[j] = pages[i];
                    f2 = 1;
                    break;
                }
            }    
		}        
        if(f2 == 0)
        {
        	f3 =0;
			for(j = 0; j < nf; ++j)
			{
		        temp[j] = -1;       
		        for(k = i + 1; k < np; ++k)
		        {
				    if(frames[j] == pages[k])
				    {
				    	temp[j] = k;
				    	break;
				    }
		        }
            }
            for(j = 0; j < nf; ++j)
            {
		         if(temp[j] == -1)
		         {
				     pos = j;
				     f3 = 1;
				     break;
		         }
            }
            if(f3 ==0)
            {
		         max = temp[0];
		         pos = 0;
		         for(j = 1; j < nf; ++j)
		         {
				     if(temp[j] > max)
				     {
						 max = temp[j];
						 pos = j;
				     }
		         }            
            }
			frames[pos] = pages[i];
			faults++;
        }
        printf("\n");
        for(j = 0; j < nf; ++j)
        	{printf("%d\t", frames[j]);}
    }
    printf("\n\nTotal Page Faults = %d", faults);
}
